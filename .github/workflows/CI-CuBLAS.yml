name: CI-CuBLAS

env:
  PYPROJECT_NAME: "llm-rs-cuda"

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: pip install -r ./build_scripts/requirements.txt
      - name: Set package name
        run: python ./build_scripts/pyproject_patcher.py

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --features cublas
          sccache: 'true'
          manylinux: auto
          before-script-linux: | 
                               yum install -y openssl-devel 
                               yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm 
                               rpm --erase gpg-pubkey-7fa2af80* 
                               wget https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-12.1.0-1.x86_64.rpm 
                               rpm install cuda-12.1.0-1.x86_64.rpm 
                               yum clean expire-cache 
                               yum install nvidia-driver-latest-dkms 
                               sudo yum install cuda 
                               yum install cuda-drivers


      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}

      - name: Install build dependencies
        run: pip install -r ./build_scripts/requirements.txt
      - name: Set package name
        run: python ./build_scripts/pyproject_patcher.py

      - uses: Jimver/cuda-toolkit@v0.2.10
        id: cuda-toolkit
        with:
          cuda: '12.1.0'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --features cublas
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: pip install -r ./build_scripts/requirements.txt
      - name: Set package name
        run: python ./build_scripts/pyproject_patcher.py 
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [windows, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
